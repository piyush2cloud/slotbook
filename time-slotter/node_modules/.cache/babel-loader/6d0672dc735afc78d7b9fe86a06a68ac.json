{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', '../../args/index', '../../utils'], factory);else if ('undefined' != typeof exports) factory(exports, require('../../args/index'), require('../../utils'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.index, global.utils), global.terminalUtils = mod.exports;\n  }\n})(this, function (exports, _index, _utils) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.os = void 0, exports.pluginMap = function (plugins, eachHandler) {\n    return plugins.map(function (plugin) {\n      return 'function' == typeof plugin && (plugin = {\n        class: plugin,\n        config: void 0\n      }), plugin;\n    }).forEach(function (pluginObj) {\n      return eachHandler(pluginObj.class, pluginObj.config);\n    });\n  }, exports.uuidv4 = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = 0 | 16 * Math.random(),\n          v = 'x' === c ? r : 8 | 3 & r;\n      return v.toString(16);\n    });\n  }, exports.getShortcuts = function (shortcuts, obj) {\n    return 'object' === ('undefined' == typeof obj ? 'undefined' : _typeof(obj)) && Object.keys(obj).forEach(function (key) {\n      var split = key.toLowerCase().replace(/\\s/g, '').split(',');\n      split.forEach(function (osName) {\n        osName === os && (shortcuts = _extends({}, shortcuts, obj[key]));\n      });\n    }), shortcuts;\n  }, exports.modCommands = function (commands) {\n    var newCommands = {};\n    return Object.keys(commands).forEach(function (name) {\n      var needsInstance = !1,\n          definition = commands[name],\n          method = definition,\n          parse = function (i) {\n        return i;\n      };\n\n      if ('undefined' != typeof definition) {\n        if ('object' === ('undefined' == typeof definition ? 'undefined' : _typeof(definition))) {\n          var cmd = new _index2.default();\n          if ('undefined' != typeof definition.options) try {\n            cmd.options(definition.options);\n          } catch (e) {\n            throw new Error('options for command wrong format');\n          }\n          parse = function (i) {\n            return cmd.parse(i, {\n              name: name,\n              help: !0,\n              version: !1\n            });\n          }, method = definition.method, needsInstance = definition.needsInstance || !1;\n        }\n\n        newCommands[name] = {\n          parse: parse,\n          method: method,\n          needsInstance: needsInstance\n        };\n      }\n    }), newCommands;\n  };\n\n  var _index2 = function (obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }(_index),\n      _extends = Object.assign || function (target) {\n    for (var source, i = 1; i < arguments.length; i++) for (var key in source = arguments[i], source) Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);\n\n    return target;\n  },\n      _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && 'function' == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  },\n      os = exports.os = (0, _utils.getOs)();\n});","map":null,"metadata":{},"sourceType":"script"}