{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ObjectDescription = require('./ObjectDescription');\n\nvar _ObjectDescription2 = _interopRequireDefault(_ObjectDescription);\n\nvar _ObjectPreview = require('./ObjectPreview');\n\nvar _ObjectPreview2 = _interopRequireDefault(_ObjectPreview); // Constants\n// Styles\n\n\nvar _objectStyles = require('./objectStyles');\n\nvar _objectStyles2 = _interopRequireDefault(_objectStyles);\n\nvar DEFAULT_ROOT_PATH = 'root';\nvar styles = {\n  base: {\n    fontFamily: 'Menlo, monospace',\n    fontSize: '11px',\n    lineHeight: '14px',\n    cursor: 'default'\n  },\n  propertyNodesContainer: {\n    paddingLeft: '12px'\n  },\n  unselectable: {\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    OUserSelect: 'none',\n    userSelect: 'none'\n  },\n  expandControl: {\n    color: '#6e6e6e',\n    fontSize: '10px',\n    marginRight: '3px',\n    whiteSpace: 'pre'\n  },\n  property: {\n    paddingTop: '2px'\n  }\n};\n\nvar ObjectInspector = function (_Component) {\n  _inherits(ObjectInspector, _Component);\n\n  _createClass(ObjectInspector, null, [{\n    key: 'defaultProps',\n    // path is dot separated property names to reach the current node\n    value: {\n      name: void 0,\n      data: undefined,\n      initialExpandedPaths: undefined,\n      depth: 0,\n      path: DEFAULT_ROOT_PATH\n    },\n    enumerable: true\n  }]);\n\n  function ObjectInspector(props) {\n    var _this = this;\n\n    _classCallCheck(this, ObjectInspector);\n\n    _get(Object.getPrototypeOf(ObjectInspector.prototype), 'constructor', this).call(this, props);\n\n    if (props.depth === 0) {\n      this.state = {\n        expandedPaths: {}\n      };\n      this.state.expandedPaths[props.path] = false; // initialize expandedPaths with initialExpandedPaths\n\n      if (typeof props.initialExpandedPaths !== 'undefined') {\n        props.initialExpandedPaths.map(function (expandedPath) {\n          if (typeof expandedPath === 'string') {\n            (function () {\n              var wildcardPathToPaths = function wildcardPathToPaths(curObject, curPath, i) {\n                var WILDCARD = \"*\";\n\n                if (i === names.length) {\n                  paths.push(curPath);\n                  return;\n                }\n\n                var name = names[i];\n\n                if (i === 0) {\n                  if (name === props.name || name === DEFAULT_ROOT_PATH || name === WILDCARD) {\n                    wildcardPathToPaths(curObject, 'root', i + 1);\n                  }\n                } else {\n                  if (name === WILDCARD) {\n                    for (var propertyName in curObject) {\n                      if (curObject.hasOwnProperty(propertyName)) {\n                        var propertyValue = curObject[propertyName];\n\n                        if (ObjectInspector.isExpandable(propertyValue)) {\n                          wildcardPathToPaths(propertyValue, curPath + '.' + propertyName, i + 1);\n                        } else {\n                          continue;\n                        }\n                      }\n                    }\n                  } else {\n                    var propertyValue = curObject[name];\n\n                    if (ObjectInspector.isExpandable(propertyValue)) {\n                      wildcardPathToPaths(propertyValue, curPath + '.' + name, i + 1);\n                    }\n                  }\n                }\n              };\n\n              var names = expandedPath.split('.'); // wildcard names\n\n              var paths = [];\n              wildcardPathToPaths(props.data, '', 0);\n              paths.map(function (path) {\n                _this.state.expandedPaths[path] = true;\n              });\n            })();\n          }\n        });\n      }\n    }\n  }\n\n  _createClass(ObjectInspector, [{\n    key: 'getExpanded',\n    value: function getExpanded(path) {\n      var expandedPaths = this.state.expandedPaths;\n\n      if (typeof expandedPaths[path] !== 'undefined') {\n        return expandedPaths[path];\n      }\n\n      return false;\n    }\n  }, {\n    key: 'setExpanded',\n    value: function setExpanded(path, expanded) {\n      var expandedPaths = this.state.expandedPaths;\n      expandedPaths[path] = expanded;\n      this.setState({\n        expandedPaths: expandedPaths\n      });\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      // console.log(this.props.data);\n      if (ObjectInspector.isExpandable(this.props.data)) {\n        if (this.props.depth > 0) {\n          this.props.setExpanded(this.props.path, !this.props.getExpanded(this.props.path));\n        } else {\n          this.setExpanded(this.props.path, !this.getExpanded(this.props.path));\n        }\n      }\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (typeof _react2['default'].initializeTouchEvents === 'function') {\n        _react2['default'].initializeTouchEvents(true);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var data = this.props.data;\n      var name = this.props.name;\n      var setExpanded = this.props.depth === 0 ? this.setExpanded.bind(this) : this.props.setExpanded;\n      var getExpanded = this.props.depth === 0 ? this.getExpanded.bind(this) : this.props.getExpanded;\n      var expanded = getExpanded(this.props.path);\n      var expandGlyph = ObjectInspector.isExpandable(data) ? expanded ? '▼' : '▶' : this.props.depth === 0 ? '' // unnamed root node\n      : ' ';\n      var propertyNodesContainer = undefined;\n\n      if (expanded) {\n        var propertyNodes = [];\n\n        for (var propertyName in data) {\n          var propertyValue = data[propertyName];\n\n          if (data.hasOwnProperty(propertyName)) {\n            propertyNodes.push(_react2['default'].createElement(ObjectInspector, {\n              getExpanded: getExpanded,\n              setExpanded: setExpanded,\n              path: this.props.path + '.' + propertyName,\n              depth: this.props.depth + 1,\n              key: propertyName,\n              name: propertyName,\n              data: propertyValue\n            }));\n          }\n        }\n\n        propertyNodesContainer = _react2['default'].createElement('div', {\n          style: styles.propertyNodesContainer\n        }, propertyNodes);\n      }\n\n      return _react2['default'].createElement('div', {\n        style: styles.base\n      }, _react2['default'].createElement('span', {\n        style: styles.property,\n        onClick: this.handleClick.bind(this)\n      }, _react2['default'].createElement('span', {\n        style: _extends({}, styles.expandControl, styles.unselectable)\n      }, expandGlyph), function () {\n        if (typeof name !== 'undefined') {\n          return _react2['default'].createElement('span', null, _react2['default'].createElement('span', {\n            style: _objectStyles2['default'].name\n          }, name), _react2['default'].createElement('span', null, ': '), _react2['default'].createElement(_ObjectDescription2['default'], {\n            object: data\n          }));\n        } else {\n          return _react2['default'].createElement(_ObjectPreview2['default'], {\n            object: data\n          });\n        }\n      }()), propertyNodesContainer);\n    }\n  }], [{\n    key: 'isExpandable',\n    value: function isExpandable(data) {\n      return typeof data === 'object' && data !== null && Object.keys(data).length > 0;\n    }\n  }]);\n\n  return ObjectInspector;\n}(_react.Component);\n\nexports['default'] = ObjectInspector;\nmodule.exports = exports['default']; // initial paths of the nodes that are visible","map":null,"metadata":{},"sourceType":"script"}