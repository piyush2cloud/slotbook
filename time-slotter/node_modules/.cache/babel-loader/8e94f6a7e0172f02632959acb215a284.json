{"ast":null,"code":"(function (global, factory) {\n  if ('function' == typeof define && define.amd) define(['exports', 'prop-types'], factory);else if ('undefined' != typeof exports) factory(exports, require('prop-types'));else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.propTypes), global.types = mod.exports;\n  }\n})(this, function (exports, _propTypes) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: !0\n  }), exports.TerminalDefaultProps = exports.TerminalContextTypes = exports.TerminalPropTypes = exports.descriptionsPropType = exports.commandsPropType = void 0;\n\n  var _propTypes2 = function (obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }(_propTypes),\n      commandsPropType = exports.commandsPropType = _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n    options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n      name: _propTypes2.default.string,\n      description: _propTypes2.default.string,\n      defaultValue: _propTypes2.default.any\n    })),\n    method: _propTypes2.default.func\n  })])),\n      descriptionsPropType = exports.descriptionsPropType = _propTypes2.default.objectOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool])),\n      TerminalPropTypes = exports.TerminalPropTypes = {\n    startState: _propTypes2.default.oneOf(['minimised', 'maximised', 'open', 'closed']),\n    showActions: _propTypes2.default.bool,\n    hideTopBar: _propTypes2.default.bool,\n    allowTabs: _propTypes2.default.bool,\n    msg: _propTypes2.default.string,\n    closedTitle: _propTypes2.default.string,\n    closedMessage: _propTypes2.default.string,\n    color: _propTypes2.default.string,\n    style: _propTypes2.default.object,\n    prompt: _propTypes2.default.string,\n    barColor: _propTypes2.default.string,\n    outputColor: _propTypes2.default.string,\n    backgroundColor: _propTypes2.default.string,\n    commands: commandsPropType,\n    descriptions: descriptionsPropType,\n    watchConsoleLogging: _propTypes2.default.bool,\n    commandPassThrough: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.bool]),\n    promptSymbol: _propTypes2.default.string,\n    plugins: _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n      class: _propTypes2.default.func,\n      config: _propTypes2.default.object\n    })])),\n    shortcuts: _propTypes2.default.objectOf(_propTypes2.default.objectOf(_propTypes2.default.string)),\n    actionHandlers: _propTypes2.default.shape({\n      handleClose: _propTypes2.default.func,\n      handleMinimise: _propTypes2.default.func,\n      handleMaximise: _propTypes2.default.func\n    }),\n    afterChange: _propTypes2.default.func,\n    commandWasRun: _propTypes2.default.func\n  },\n      TerminalContextTypes = exports.TerminalContextTypes = {\n    barShowing: _propTypes2.default.bool,\n    tabsShowing: _propTypes2.default.bool,\n    activeTab: _propTypes2.default.string,\n    instances: _propTypes2.default.array,\n    show: _propTypes2.default.bool,\n    minimise: _propTypes2.default.bool,\n    maximise: _propTypes2.default.bool,\n    closeWindow: _propTypes2.default.func,\n    openWindow: _propTypes2.default.func,\n    minimiseWindow: _propTypes2.default.func,\n    unminimiseWindow: _propTypes2.default.func,\n    maximiseWindow: _propTypes2.default.func,\n    unmaximiseWindow: _propTypes2.default.func,\n    toggleShow: _propTypes2.default.func,\n    toggleMaximise: _propTypes2.default.func,\n    toggleMinimize: _propTypes2.default.func\n  },\n      TerminalDefaultProps = exports.TerminalDefaultProps = {\n    startState: 'open',\n    hideTopBar: !1,\n    allowTabs: !0,\n    showActions: !0,\n    msg: '',\n    closedTitle: 'OOPS! You closed the window.',\n    closedMessage: 'Click on the icon to reopen.',\n    color: 'green',\n    style: {},\n    prompt: 'green',\n    barColor: 'black',\n    backgroundColor: 'black',\n    commands: {},\n    descriptions: {},\n    watchConsoleLogging: !1,\n    commandPassThrough: !1,\n    promptSymbol: '>',\n    plugins: [],\n    shortcuts: {}\n  };\n});","map":null,"metadata":{},"sourceType":"script"}