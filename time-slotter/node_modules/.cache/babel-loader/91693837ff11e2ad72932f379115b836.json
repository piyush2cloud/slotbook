{"ast":null,"code":"import _slicedToArray from \"/Users/Piyush/Desktop/abhaas/time-slotter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/Piyush/Desktop/abhaas/time-slotter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Piyush/Desktop/abhaas/time-slotter/src/Boarding.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, Form, Container } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Row, Col, ListGroup } from 'react-bootstrap';\nimport { Tab, Nav, Dropdown, DropdownButton, ToggleButton } from 'react-bootstrap';\nimport Avatar from 'react-toolbox/lib/avatar';\nlet initialData = {\n  \"names\": [{\n    \"id\": 1,\n    \"name\": \"Airtel\",\n    \"funcValue\": \"Piyush Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Vodafone\",\n    \"funcValue\": \"Abhaas Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Provider 1\",\n    \"funcValue\": \"Abhinav Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 4,\n    \"name\": \"Provider 2\",\n    \"funcValue\": \"Abhinav Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 5,\n    \"name\": \"Provider 3\",\n    \"funcValue\": \"Abhinav Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 6,\n    \"name\": \"Provider 4\",\n    \"funcValue\": \"Abhinav Aggarwal\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 7,\n    \"name\": \"Provider 5\",\n    \"funcValue\": \"Abhinav Aggarwal\",\n    \"portvalue\": \"403\"\n  }]\n};\nconst namesData = [\"Piyush Aggarwal\", \"Abhaas Aggarwal\", \"Abhinav Aggarwal\", \"Sunita Aggarwal\", \"Bhavya Aggarwal\", \"Nimesh Johri\", \"Gaurav Tyagi\"];\nconst portNumber = [\"403\", \"200\", \"100\", \"560\", \"120\", \"282\", \"328\"];\n\nconst GithubIcon = () => React.createElement(\"svg\", {\n  viewBox: \"0 0 284 277\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"g\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"path\", {\n  d: \"M141.888675,0.0234927555 C63.5359948,0.0234927555 0,63.5477395 0,141.912168 C0,204.6023 40.6554239,257.788232 97.0321356,276.549924 C104.12328,277.86336 106.726656,273.471926 106.726656,269.724287 C106.726656,266.340838 106.595077,255.16371 106.533987,243.307542 C67.0604204,251.890693 58.7310279,226.56652 58.7310279,226.56652 C52.2766299,210.166193 42.9768456,205.805304 42.9768456,205.805304 C30.1032937,196.998939 43.9472374,197.17986 43.9472374,197.17986 C58.1953153,198.180797 65.6976425,211.801527 65.6976425,211.801527 C78.35268,233.493192 98.8906827,227.222064 106.987463,223.596605 C108.260955,214.426049 111.938106,208.166669 115.995895,204.623447 C84.4804813,201.035582 51.3508808,188.869264 51.3508808,134.501475 C51.3508808,119.01045 56.8936274,106.353063 65.9701981,96.4165325 C64.4969882,92.842765 59.6403297,78.411417 67.3447241,58.8673023 C67.3447241,58.8673023 79.2596322,55.0538738 106.374213,73.4114319 C117.692318,70.2676443 129.83044,68.6910512 141.888675,68.63701 C153.94691,68.6910512 166.09443,70.2676443 177.433682,73.4114319 C204.515368,55.0538738 216.413829,58.8673023 216.413829,58.8673023 C224.13702,78.411417 219.278012,92.842765 217.804802,96.4165325 C226.902519,106.353063 232.407672,119.01045 232.407672,134.501475 C232.407672,188.998493 199.214632,200.997988 167.619331,204.510665 C172.708602,208.913848 177.243363,217.54869 177.243363,230.786433 C177.243363,249.771339 177.078889,265.050898 177.078889,269.724287 C177.078889,273.500121 179.632923,277.92445 186.825101,276.531127 C243.171268,257.748288 283.775,204.581154 283.775,141.912168 C283.775,63.5477395 220.248404,0.0234927555 141.888675,0.0234927555\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})));\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid\n});\n\nconst grid = 8;\n\nconst getItemStyleOne = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  height: 60,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\"\n}, draggableStyle);\n\nconst getItemStyleTwo = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  height: 60,\n  // change background colour if dragging\n  background: isDragging ? \"lightcoral\" : \"lightskyblue\"\n}, draggableStyle);\n\nconst getItemStyleThree = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  height: 60,\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"blanchedalmond\"\n}, draggableStyle);\n\nconst reorder = (list, startIndex, endIndex) => {\n  console.log(list);\n  const result = Array.from(list);\n\n  const _result$splice = result.splice(startIndex, 1),\n        _result$splice2 = _slicedToArray(_result$splice, 1),\n        removed = _result$splice2[0];\n\n  console.log(removed);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nclass Boarding extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      axios.get(\"http://localhost:3000/getNameSlots\").then(response => {\n        // console.log(response.data.names);\n        let responseData = JSON.parse(response.data.names);\n        let newNamesArray = responseData.names.map((elem, position) => {\n          return elem[\"funcValue\"];\n        });\n        let newPortArray = responseData.names.map((elem, position) => {\n          return elem[\"portvalue\"];\n        });\n        this.setState({\n          items: initialData,\n          namesData: newNamesArray,\n          portNumber: newPortArray\n        });\n      });\n    };\n\n    this.updateItemsData = () => {\n      let updatedAllData = _objectSpread({}, this.state);\n\n      let itemsData = updatedAllData.items;\n      let namesNewData = updatedAllData.namesData;\n      let portAllData = updatedAllData.portNumber;\n      console.log(this.state.namesData);\n      let newItemsData = itemsData.names.map((elem, pos) => {\n        elem[\"funcValue\"] = namesNewData[pos];\n        elem[\"portvalue\"] = portAllData[pos];\n        return elem;\n      });\n      itemsData[\"names\"] = newItemsData;\n      console.log(itemsData);\n      axios.get(\"http://localhost:3000/updateNameSlots?bookids=\" + JSON.stringify(itemsData) + \":::\").then(response => {\n        console.log(response);\n      });\n    };\n\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.state = {\n      items: initialData,\n      namesData: namesData,\n      portNumber: portNumber\n    };\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    console.log(result);\n\n    if (!result.destination) {\n      return;\n    }\n\n    if (result.destination.droppableId == \"droppableOne\") {\n      console.log(\"droppableOnne\");\n    }\n\n    if (result.destination.droppableId == \"droppableTwo\") {\n      let namesData = this.state.namesData;\n      let startIndex = result.source.index;\n      let destinationIndex = result.destination.index;\n      let namesNewArray = Array.from(namesData);\n\n      const _namesNewArray$splice = namesNewArray.splice(startIndex, 1),\n            _namesNewArray$splice2 = _slicedToArray(_namesNewArray$splice, 1),\n            removed = _namesNewArray$splice2[0];\n\n      namesNewArray.splice(destinationIndex, 0, removed);\n      this.setState({\n        namesData: namesNewArray\n      });\n    }\n\n    if (result.destination.droppableId == \"droppableThree\") {\n      console.log(\"droppableThree\");\n      let portData = this.state.portNumber;\n      let startIndex = result.source.index;\n      let destinationIndex = result.destination.index;\n      let portNewArray = Array.from(portData);\n\n      const _portNewArray$splice = portNewArray.splice(startIndex, 1),\n            _portNewArray$splice2 = _slicedToArray(_portNewArray$splice, 1),\n            removed = _portNewArray$splice2[0];\n\n      portNewArray.splice(destinationIndex, 0, removed);\n      this.setState({\n        portNumber: portNewArray\n      });\n    }\n\n    setTimeout(() => {\n      this.updateItemsData();\n    }, 500); // const items = reorder(\n    //   this.state.items,\n    //   result.source.index,\n    //   result.destination.index\n    // );\n    // this.setState({\n    //   items\n    // });\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"70%\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n        marginLeft: \"2px\"\n      },\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Providers\"), React.createElement(DragDropContext, {\n      style: {\n        margin: \"10px\"\n      },\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppableOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleOne(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), item.name))))))), React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"70%\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Band Value\"), React.createElement(DragDropContext, {\n      style: {\n        margin: \"10px\"\n      },\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppablefour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleOne(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \"Dual Band\"))))))), React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"70%\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Port Number\"), React.createElement(DragDropContext, {\n      style: {\n        margin: \"10px\"\n      },\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppablefour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleOne(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), \"Port Number 2\"))))))), React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"70%\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Used Names\"), React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppablel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), this.state.namesData.map((item, index) => React.createElement(Draggable, {\n      key: item,\n      draggableId: item,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleTwo(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(DropdownButton, {\n      id: \"dropdown-basic-button-\" + index,\n      variant: \"success\",\n      onSelect: async evt => {\n        console.log(evt);\n      },\n      title: \"Select Names\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#Nimesh-Johri\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Nimesh-Johri\"), React.createElement(Dropdown.Item, {\n      href: \"#Piyush-Aggarwal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Piyush-Aggarwal\"), React.createElement(Dropdown.Item, {\n      href: \"#Lokesh-Gupta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Lokesh Gupta\")))))))))), React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        width: \"70%\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"RF Port Number\"), React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppableThree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), this.state.portNumber.map((item, index) => React.createElement(Draggable, {\n      key: item,\n      draggableId: item,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleThree(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), item))))))));\n  }\n\n  onDrop(data) {\n    console.log(this);\n  }\n\n}\n\nexport default withRouter(Boarding);","map":{"version":3,"sources":["/Users/Piyush/Desktop/abhaas/time-slotter/src/Boarding.js"],"names":["React","Component","Button","FormGroup","FormControl","Form","Container","Redirect","withRouter","axios","DragDropContext","Droppable","Draggable","Row","Col","ListGroup","Tab","Nav","Dropdown","DropdownButton","ToggleButton","Avatar","initialData","namesData","portNumber","GithubIcon","getListStyle","isDraggingOver","background","padding","grid","getItemStyleOne","isDragging","draggableStyle","userSelect","margin","height","getItemStyleTwo","getItemStyleThree","reorder","list","startIndex","endIndex","console","log","result","Array","from","splice","removed","Boarding","constructor","props","componentDidMount","get","then","response","responseData","JSON","parse","data","names","newNamesArray","map","elem","position","newPortArray","setState","items","updateItemsData","updatedAllData","state","itemsData","namesNewData","portAllData","newItemsData","pos","stringify","onDragEnd","bind","destination","droppableId","source","index","destinationIndex","namesNewArray","portData","portNewArray","setTimeout","render","width","marginTop","marginBottom","marginLeft","provided","snapshot","droppableProps","innerRef","item","id","name","draggableProps","dragHandleProps","style","evt","onDrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, FormGroup, FormControl, Form, Container} from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Row, Col, ListGroup } from 'react-bootstrap';\nimport {Tab,Nav, Dropdown, DropdownButton, ToggleButton} from 'react-bootstrap'\nimport Avatar from 'react-toolbox/lib/avatar';\n\nlet initialData = {\n    \"names\": [\n        {\"id\": 1, \"name\": \"Airtel\", \"funcValue\": \"Piyush Aggarwal\", \"portvalue\": \"403\"}, \n        {\"id\": 2, \"name\": \"Vodafone\", \"funcValue\": \"Abhaas Aggarwal\", \"portvalue\": \"403\"}, \n        {\"id\": 3, \"name\": \"Provider 1\", \"funcValue\": \"Abhinav Aggarwal\", \"portvalue\": \"403\"},\n        {\"id\": 4, \"name\": \"Provider 2\", \"funcValue\": \"Abhinav Aggarwal\", \"portvalue\": \"403\"},\n        {\"id\": 5, \"name\": \"Provider 3\", \"funcValue\": \"Abhinav Aggarwal\", \"portvalue\": \"403\"},\n        {\"id\": 6, \"name\": \"Provider 4\", \"funcValue\": \"Abhinav Aggarwal\", \"portvalue\": \"403\"},\n        {\"id\": 7, \"name\": \"Provider 5\", \"funcValue\": \"Abhinav Aggarwal\", \"portvalue\": \"403\"}\n    ]}\n\nconst namesData=[\"Piyush Aggarwal\",\"Abhaas Aggarwal\",\"Abhinav Aggarwal\",\"Sunita Aggarwal\",\"Bhavya Aggarwal\",\"Nimesh Johri\",\"Gaurav Tyagi\"];\nconst portNumber=[\"403\",\"200\",\"100\",\"560\",\"120\",\"282\",\"328\"]\n\nconst GithubIcon = () => (\n    <svg viewBox=\"0 0 284 277\">\n    <g><path d=\"M141.888675,0.0234927555 C63.5359948,0.0234927555 0,63.5477395 0,141.912168 C0,204.6023 40.6554239,257.788232 97.0321356,276.549924 C104.12328,277.86336 106.726656,273.471926 106.726656,269.724287 C106.726656,266.340838 106.595077,255.16371 106.533987,243.307542 C67.0604204,251.890693 58.7310279,226.56652 58.7310279,226.56652 C52.2766299,210.166193 42.9768456,205.805304 42.9768456,205.805304 C30.1032937,196.998939 43.9472374,197.17986 43.9472374,197.17986 C58.1953153,198.180797 65.6976425,211.801527 65.6976425,211.801527 C78.35268,233.493192 98.8906827,227.222064 106.987463,223.596605 C108.260955,214.426049 111.938106,208.166669 115.995895,204.623447 C84.4804813,201.035582 51.3508808,188.869264 51.3508808,134.501475 C51.3508808,119.01045 56.8936274,106.353063 65.9701981,96.4165325 C64.4969882,92.842765 59.6403297,78.411417 67.3447241,58.8673023 C67.3447241,58.8673023 79.2596322,55.0538738 106.374213,73.4114319 C117.692318,70.2676443 129.83044,68.6910512 141.888675,68.63701 C153.94691,68.6910512 166.09443,70.2676443 177.433682,73.4114319 C204.515368,55.0538738 216.413829,58.8673023 216.413829,58.8673023 C224.13702,78.411417 219.278012,92.842765 217.804802,96.4165325 C226.902519,106.353063 232.407672,119.01045 232.407672,134.501475 C232.407672,188.998493 199.214632,200.997988 167.619331,204.510665 C172.708602,208.913848 177.243363,217.54869 177.243363,230.786433 C177.243363,249.771339 177.078889,265.050898 177.078889,269.724287 C177.078889,273.500121 179.632923,277.92445 186.825101,276.531127 C243.171268,257.748288 283.775,204.581154 283.775,141.912168 C283.775,63.5477395 220.248404,0.0234927555 141.888675,0.0234927555\" /></g>\n    </svg>\n);\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n  \n});\n\nconst grid = 8;\n\nconst getItemStyleOne = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    height:60,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getItemStyleTwo = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    height:60,\n    // change background colour if dragging\n    background: isDragging ? \"lightcoral\" : \"lightskyblue\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getItemStyleThree = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    height:60,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"blanchedalmond\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst reorder = (list, startIndex, endIndex) => {\n    console.log(list)\n    const result = Array.from(list);\n  \n    const [removed] = result.splice(startIndex, 1);\n    console.log(removed);\n  \n    result.splice(endIndex, 0, removed);\n  \n    return result;\n  };\n\n\n      \nclass Boarding extends Component {\n    constructor(props) {\n      super(props);\n      this.onDragEnd = this.onDragEnd.bind(this);\n      this.state = {\n        items: initialData,\n        namesData: namesData,\n        portNumber:portNumber\n      };\n    }\n\n    componentDidMount=()=>{\n        axios.get(\"http://localhost:3000/getNameSlots\")\n        .then((response) => {\n            // console.log(response.data.names);\n            let responseData=JSON.parse(response.data.names);\n\n            let newNamesArray=responseData.names.map((elem,position)=>{\n                return elem[\"funcValue\"]\n            })\n            let newPortArray=responseData.names.map((elem,position)=>{\n                return elem[\"portvalue\"]\n            })\n                \n            this.setState({\n                items : initialData,\n                namesData: newNamesArray,\n                portNumber: newPortArray\n            })\n        });\n    }\n\n    updateItemsData = ()=>{\n        let updatedAllData={...this.state}\n        let itemsData=updatedAllData.items;\n        let namesNewData=updatedAllData.namesData;\n        let portAllData=updatedAllData.portNumber;\n        console.log(this.state.namesData);\n        let newItemsData=itemsData.names.map((elem,pos)=>{\n            elem[\"funcValue\"]=namesNewData[pos];\n            elem[\"portvalue\"]=portAllData[pos];\n            return elem;\n        })\n        itemsData[\"names\"]=newItemsData;\n        console.log(itemsData);\n\n        axios.get(\"http://localhost:3000/updateNameSlots?bookids=\"+JSON.stringify(itemsData)+\":::\")\n        .then((response) => {\n            console.log(response);\n        });\n    }\n\n    onDragEnd(result) {\n        // dropped outside the list\n        console.log(result);\n        if (!result.destination) {\n          return;\n        }\n    \n        if(result.destination.droppableId==\"droppableOne\"){\n            console.log(\"droppableOnne\");\n        }\n\n        if(result.destination.droppableId==\"droppableTwo\"){\n            let namesData=this.state.namesData;\n            let startIndex=result.source.index;\n            let destinationIndex=result.destination.index;\n            let namesNewArray=Array.from(namesData);\n            const [removed] = namesNewArray.splice(startIndex, 1);\n            namesNewArray.splice(destinationIndex, 0, removed);\n            this.setState({\n                namesData:namesNewArray\n            })\n        }\n\n        if(result.destination.droppableId==\"droppableThree\"){\n            console.log(\"droppableThree\");\n            let portData=this.state.portNumber;\n            let startIndex=result.source.index;\n            let destinationIndex=result.destination.index;\n            let portNewArray=Array.from(portData);\n            const [removed] = portNewArray.splice(startIndex, 1);\n            portNewArray.splice(destinationIndex, 0, removed);\n            this.setState({\n                portNumber:portNewArray\n            })\n        }\n        setTimeout(()=>{\n            this.updateItemsData();\n        },500);\n        \n    \n        // const items = reorder(\n        //   this.state.items,\n        //   result.source.index,\n        //   result.destination.index\n        // );\n    \n        // this.setState({\n        //   items\n        // });\n    }\n\n    render() {\n        return (\n            <Row> \n                <Col xs={3}>\n                    <Button style={{width:\"70%\",marginTop:\"20px\",marginBottom:\"20px\",marginLeft:\"2px\"}} variant=\"success\">Providers</Button>\n                    <DragDropContext style={{margin:\"10px\"}} onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppableOne\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleOne(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                {/* <img  style={{height:\"20px\", width:\"100px\", marginRight:\"10px\"}} src=\"./voda.jpeg\"></img><span></span> */}\n                                                {item.name}\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n                <Col xs={2}>\n                    <Button style={{width:\"70%\",marginTop:\"20px\",marginBottom:\"20px\"}} variant=\"success\">Band Value</Button>\n                    <DragDropContext style={{margin:\"10px\"}} onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppablefour\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleOne(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                Dual Band\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n\n                <Col xs={2}>\n                    <Button style={{width:\"70%\",marginTop:\"20px\",marginBottom:\"20px\"}} variant=\"success\">Port Number</Button>\n                    <DragDropContext style={{margin:\"10px\"}} onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppablefour\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleOne(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                Port Number 2\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n\n                <Col xs={3}>\n                    <Button style={{width:\"70%\",marginTop:\"20px\",marginBottom:\"20px\"}} variant=\"success\">Used Names</Button>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppablel\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.namesData.map((item, index) => (\n                                        <Draggable key={item} draggableId={item} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleTwo(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                <span>\n                                                    <DropdownButton id={\"dropdown-basic-button-\"+index} variant=\"success\" onSelect={async(evt)=>{\n                                                            console.log(evt);\n                                                        }} title=\"Select Names\">\n                                                            <Dropdown.Item href=\"#Nimesh-Johri\">Nimesh-Johri</Dropdown.Item>\n                                                            <Dropdown.Item href=\"#Piyush-Aggarwal\">Piyush-Aggarwal</Dropdown.Item>\n                                                            <Dropdown.Item href=\"#Lokesh-Gupta\">Lokesh Gupta</Dropdown.Item>\n                                                    </DropdownButton>\n                                                {/* {item} */}\n                                                </span>\n                                               \n                                                \n                                               </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n                <Col xs={2}>\n                    <Button style={{width:\"70%\",marginTop:\"20px\",marginBottom:\"20px\"}} variant=\"success\">RF Port Number</Button>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppableThree\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.portNumber.map((item, index) => (\n                                        <Draggable key={item} draggableId={item} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleThree(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                 {item}\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n            </Row>\n        )\n    }\n\n    onDrop(data) {\n        console.log(this)\n    }\n  }\n\nexport default (withRouter)(Boarding)"]},"metadata":{},"sourceType":"module"}