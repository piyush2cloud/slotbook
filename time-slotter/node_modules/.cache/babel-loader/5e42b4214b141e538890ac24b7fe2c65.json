{"ast":null,"code":"import _defineProperty from \"/Users/Piyush/Desktop/abhaas/time-slotter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Piyush/Desktop/abhaas/time-slotter/src/Boarding.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, Form, Container } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Row, Col, ListGroup } from 'react-bootstrap';\nimport Avatar from 'react-toolbox/lib/avatar';\nconst initialData = {\n  \"names\": [{\n    \"id\": 1,\n    \"name\": \"Airtel\",\n    \"funcValue\": \"Piyush\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Vodafone\",\n    \"funcValue\": \"Abhaas\",\n    \"portvalue\": \"403\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Idea\",\n    \"funcValue\": \"Abhinav\",\n    \"portvalue\": \"403\"\n  }]\n};\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  padding: grid,\n  width: 400\n});\n\nconst grid = 8;\n\nconst getItemStyleOne = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"grey\"\n}, draggableStyle);\n\nconst getItemStyleTwo = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"lime\"\n}, draggableStyle);\n\nconst getItemStyleThree = (isDragging, draggableStyle) => _objectSpread({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  padding: grid * 2,\n  margin: \"0 0 \".concat(grid, \"px 0\"),\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"blanchedalmond\"\n}, draggableStyle);\n\nclass Boarding extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.state = {\n      items: initialData\n    };\n  }\n\n  onDragEnd(result) {}\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppableOne\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleOne(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), item.name))))))), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppableTwo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleTwo(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://placeimg.com/80/80/animals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), item.funcValue))))))), React.createElement(Col, {\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Droppable, {\n      droppableId: \"droppableThree\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), this.state.items.names.map((item, index) => React.createElement(Draggable, {\n      key: item.id,\n      draggableId: item.name,\n      index: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, (provided, snapshot) => React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef\n    }, provided.draggableProps, provided.dragHandleProps, {\n      style: getItemStyleThree(snapshot.isDragging, provided.draggableProps.style),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), item.portvalue))))))));\n  }\n\n  onDrop(data) {\n    console.log(this);\n  }\n\n}\n\nexport default withRouter(Boarding);","map":{"version":3,"sources":["/Users/Piyush/Desktop/abhaas/time-slotter/src/Boarding.js"],"names":["React","Component","Button","FormGroup","FormControl","Form","Container","Redirect","withRouter","axios","DragDropContext","Droppable","Draggable","Row","Col","ListGroup","Avatar","initialData","getListStyle","isDraggingOver","background","padding","grid","width","getItemStyleOne","isDragging","draggableStyle","userSelect","margin","getItemStyleTwo","getItemStyleThree","Boarding","constructor","props","onDragEnd","bind","state","items","result","render","provided","snapshot","droppableProps","innerRef","names","map","item","index","id","name","draggableProps","dragHandleProps","style","funcValue","portvalue","onDrop","data","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,WAA5B,EAAyCC,IAAzC,EAA+CC,SAA/C,QAA+D,iBAA/D;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,MAAMC,WAAW,GAAG;AAChB,WAAS,CACL;AAAC,UAAM,CAAP;AAAU,YAAQ,QAAlB;AAA4B,iBAAa,QAAzC;AAAmD,iBAAa;AAAhE,GADK,EAEL;AAAC,UAAM,CAAP;AAAU,YAAQ,UAAlB;AAA8B,iBAAa,QAA3C;AAAqD,iBAAa;AAAlE,GAFK,EAGL;AAAC,UAAM,CAAP;AAAU,YAAQ,MAAlB;AAA0B,iBAAa,SAAvC;AAAkD,iBAAa;AAA/D,GAHK;AADO,CAApB;;AAOA,MAAMC,YAAY,GAAGC,cAAc,KAAK;AACpCC,EAAAA,UAAU,EAAED,cAAc,GAAG,WAAH,GAAiB,WADP;AAEpCE,EAAAA,OAAO,EAAEC,IAF2B;AAGpCC,EAAAA,KAAK,EAAE;AAH6B,CAAL,CAAnC;;AAMA,MAAMD,IAAI,GAAG,CAAb;;AAEA,MAAME,eAAe,GAAG,CAACC,UAAD,EAAaC,cAAb;AACpB;AACAC,EAAAA,UAAU,EAAE,MAFQ;AAGpBN,EAAAA,OAAO,EAAEC,IAAI,GAAG,CAHI;AAIpBM,EAAAA,MAAM,gBAASN,IAAT,SAJc;AAKpB;AACAF,EAAAA,UAAU,EAAEK,UAAU,GAAG,YAAH,GAAkB;AANpB,GAQjBC,cARiB,CAAxB;;AAWA,MAAMG,eAAe,GAAG,CAACJ,UAAD,EAAaC,cAAb;AACpB;AACAC,EAAAA,UAAU,EAAE,MAFQ;AAGpBN,EAAAA,OAAO,EAAEC,IAAI,GAAG,CAHI;AAIpBM,EAAAA,MAAM,gBAASN,IAAT,SAJc;AAKpB;AACAF,EAAAA,UAAU,EAAEK,UAAU,GAAG,YAAH,GAAkB;AANpB,GAQjBC,cARiB,CAAxB;;AAWA,MAAMI,iBAAiB,GAAG,CAACL,UAAD,EAAaC,cAAb;AACtB;AACAC,EAAAA,UAAU,EAAE,MAFU;AAGtBN,EAAAA,OAAO,EAAEC,IAAI,GAAG,CAHM;AAItBM,EAAAA,MAAM,gBAASN,IAAT,SAJgB;AAKtB;AACAF,EAAAA,UAAU,EAAEK,UAAU,GAAG,YAAH,GAAkB;AANlB,GAQnBC,cARmB,CAA1B;;AAaA,MAAMK,QAAN,SAAuB9B,SAAvB,CAAiC;AAC7B+B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEpB;AADI,KAAb;AAGD;;AAEDiB,EAAAA,SAAS,CAACI,MAAD,EAAS,CAEjB;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKL,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACM,QAAD,EAAWC,QAAX,KACG,6CAASD,QAAQ,CAACE,cAAlB;AAAkC,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAAhD;AAA0D,MAAA,KAAK,EAAEzB,YAAY,CAACuB,QAAQ,CAACtB,cAAV,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK,KAAKiB,KAAL,CAAWC,KAAX,CAAiBO,KAAjB,CAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KACxB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,IAAI,CAACE,EAArB;AAAyB,MAAA,WAAW,EAAEF,IAAI,CAACG,IAA3C;AAAiD,MAAA,KAAK,EAAEF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACP,QAAD,EAAWC,QAAX,KACG;AACA,MAAA,GAAG,EAAED,QAAQ,CAACG;AADd,OAEQH,QAAQ,CAACU,cAFjB,EAGQV,QAAQ,CAACW,eAHjB;AAIA,MAAA,KAAK,EAAE3B,eAAe,CAClBiB,QAAQ,CAAChB,UADS,EAElBe,QAAQ,CAACU,cAAT,CAAwBE,KAFN,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASCN,IAAI,CAACG,IATN,CAFR,CADH,CADL,CAFR,CADJ,CADJ,CADJ,EA6BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKf,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACM,QAAD,EAAWC,QAAX,KACG,6CAASD,QAAQ,CAACE,cAAlB;AAAkC,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAAhD;AAA0D,MAAA,KAAK,EAAEzB,YAAY,CAACuB,QAAQ,CAACtB,cAAV,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK,KAAKiB,KAAL,CAAWC,KAAX,CAAiBO,KAAjB,CAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KACxB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,IAAI,CAACE,EAArB;AAAyB,MAAA,WAAW,EAAEF,IAAI,CAACG,IAA3C;AAAiD,MAAA,KAAK,EAAEF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACP,QAAD,EAAWC,QAAX,KACG;AACA,MAAA,GAAG,EAAED,QAAQ,CAACG;AADd,OAEQH,QAAQ,CAACU,cAFjB,EAGQV,QAAQ,CAACW,eAHjB;AAIA,MAAA,KAAK,EAAEtB,eAAe,CAClBY,QAAQ,CAAChB,UADS,EAElBe,QAAQ,CAACU,cAAT,CAAwBE,KAFN,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ;AAAK,MAAA,GAAG,EAAC,oCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CATA,EAUCN,IAAI,CAACO,SAVN,CAFR,CADH,CADL,CAFR,CADJ,CADJ,CA7BJ,EA0DI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKnB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACM,QAAD,EAAWC,QAAX,KACG,6CAASD,QAAQ,CAACE,cAAlB;AAAkC,MAAA,GAAG,EAAEF,QAAQ,CAACG,QAAhD;AAA0D,MAAA,KAAK,EAAEzB,YAAY,CAACuB,QAAQ,CAACtB,cAAV,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACK,KAAKiB,KAAL,CAAWC,KAAX,CAAiBO,KAAjB,CAAuBC,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KACxB,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAED,IAAI,CAACE,EAArB;AAAyB,MAAA,WAAW,EAAEF,IAAI,CAACG,IAA3C;AAAiD,MAAA,KAAK,EAAEF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACP,QAAD,EAAWC,QAAX,KACG;AACA,MAAA,GAAG,EAAED,QAAQ,CAACG;AADd,OAEQH,QAAQ,CAACU,cAFjB,EAGQV,QAAQ,CAACW,eAHjB;AAIA,MAAA,KAAK,EAAErB,iBAAiB,CACpBW,QAAQ,CAAChB,UADW,EAEpBe,QAAQ,CAACU,cAAT,CAAwBE,KAFJ,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASEN,IAAI,CAACQ,SATP,CAFR,CADH,CADL,CAFR,CADJ,CADJ,CA1DJ,CADJ;AAwFH;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AA1G4B;;AA6GjC,eAAgBlD,UAAD,CAAauB,QAAb,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, FormGroup, FormControl, Form, Container} from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Row, Col, ListGroup } from 'react-bootstrap';\n\nimport Avatar from 'react-toolbox/lib/avatar';\nconst initialData = {\n    \"names\": [\n        {\"id\": 1, \"name\": \"Airtel\", \"funcValue\": \"Piyush\", \"portvalue\": \"403\"}, \n        {\"id\": 2, \"name\": \"Vodafone\", \"funcValue\": \"Abhaas\", \"portvalue\": \"403\"}, \n        {\"id\": 3, \"name\": \"Idea\", \"funcValue\": \"Abhinav\", \"portvalue\": \"403\"}\n    ]}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n    padding: grid,\n    width: 400\n});\n\nconst grid = 8;\n\nconst getItemStyleOne = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"grey\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getItemStyleTwo = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"lime\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getItemStyleThree = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : \"blanchedalmond\",\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\n\n      \nclass Boarding extends Component {\n    constructor(props) {\n      super(props);\n      this.onDragEnd = this.onDragEnd.bind(this);\n      this.state = {\n        items: initialData\n      };\n    }\n\n    onDragEnd(result) {\n\n    }\n\n    render() {\n        return (\n            <Row> \n                <Col xs={4}>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppableOne\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleOne(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                {item.name}\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n                <Col xs={4}>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppableTwo\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleTwo(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                <Avatar><img src=\"https://placeimg.com/80/80/animals\"/></Avatar>\n                                                {item.funcValue}\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n\n                <Col xs={4}>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        <Droppable droppableId=\"droppableThree\">\n                            {(provided, snapshot)=>(\n                                <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                                    {this.state.items.names.map((item, index) => (\n                                        <Draggable key={item.id} draggableId={item.name} index={index}>\n                                            {(provided, snapshot) => (\n                                                <div\n                                                ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                style={getItemStyleThree(\n                                                    snapshot.isDragging,\n                                                    provided.draggableProps.style\n                                                    )}\n                                                >\n                                                 {item.portvalue}\n                                                </div>\n                                            )}\n                                        </Draggable>\n                                    ))}\n                                </div>\n                            )}\n                        </Droppable>\n                    </DragDropContext>\n                </Col>\n            </Row>\n        )\n    }\n\n    onDrop(data) {\n        console.log(this)\n    }\n  }\n\nexport default (withRouter)(Boarding)"]},"metadata":{},"sourceType":"module"}