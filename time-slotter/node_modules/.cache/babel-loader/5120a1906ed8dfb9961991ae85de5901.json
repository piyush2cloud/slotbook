{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames2 = require('classnames');\n\nvar _classnames3 = _interopRequireDefault(_classnames2);\n\nvar _reactCssThemr = require('react-css-themr');\n\nvar _Portal = require('../hoc/Portal');\n\nvar _Portal2 = _interopRequireDefault(_Portal);\n\nvar _utils = require('../utils/utils');\n\nvar _identifiers = require('../identifiers');\n\nvar _events = require('../utils/events');\n\nvar _events2 = _interopRequireDefault(_events);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar POSITION = {\n  BOTTOM: 'bottom',\n  HORIZONTAL: 'horizontal',\n  LEFT: 'left',\n  RIGHT: 'right',\n  TOP: 'top',\n  VERTICAL: 'vertical'\n};\nvar defaults = {\n  className: '',\n  delay: 0,\n  hideOnClick: true,\n  passthrough: true,\n  showOnClick: false,\n  position: POSITION.VERTICAL,\n  theme: {}\n};\n\nvar tooltipFactory = function tooltipFactory() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _defaults$options = _extends({}, defaults, options),\n      defaultClassName = _defaults$options.className,\n      defaultDelay = _defaults$options.delay,\n      defaultHideOnClick = _defaults$options.hideOnClick,\n      defaultShowOnClick = _defaults$options.showOnClick,\n      defaultPassthrough = _defaults$options.passthrough,\n      defaultPosition = _defaults$options.position,\n      defaultTheme = _defaults$options.theme;\n\n  return function (ComposedComponent) {\n    var TooltippedComponent = function (_Component) {\n      _inherits(TooltippedComponent, _Component);\n\n      function TooltippedComponent() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, TooltippedComponent);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TooltippedComponent.__proto__ || Object.getPrototypeOf(TooltippedComponent)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n          active: false,\n          position: _this.props.tooltipPosition,\n          visible: false\n        }, _this.onTransformEnd = function (e) {\n          if (e.propertyName === 'transform') {\n            _events2.default.removeEventListenerOnTransitionEnded(_this.tooltipNode, _this.onTransformEnd);\n\n            _this.setState({\n              visible: false\n            });\n          }\n        }, _this.handleMouseEnter = function (event) {\n          _this.activate(_this.calculatePosition(event.currentTarget));\n\n          if (_this.props.onMouseEnter) _this.props.onMouseEnter(event);\n        }, _this.handleMouseLeave = function (event) {\n          _this.deactivate();\n\n          if (_this.props.onMouseLeave) _this.props.onMouseLeave(event);\n        }, _this.handleClick = function (event) {\n          if (_this.props.tooltipHideOnClick && _this.state.active) {\n            _this.deactivate();\n          }\n\n          if (_this.props.tooltipShowOnClick && !_this.state.active) {\n            _this.activate(_this.calculatePosition(event.currentTarget));\n          }\n\n          if (_this.props.onClick) _this.props.onClick(event);\n        }, _temp), _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(TooltippedComponent, [{\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          if (this.tooltipNode) {\n            _events2.default.removeEventListenerOnTransitionEnded(this.tooltipNode, this.onTransformEnd);\n          }\n\n          if (this.timeout) clearTimeout(this.timeout);\n        }\n      }, {\n        key: 'getPosition',\n        value: function getPosition(element) {\n          var tooltipPosition = this.props.tooltipPosition;\n\n          if (tooltipPosition === POSITION.HORIZONTAL) {\n            var origin = element.getBoundingClientRect();\n\n            var _getViewport = (0, _utils.getViewport)(),\n                ww = _getViewport.width;\n\n            var toRight = origin.left < ww / 2 - origin.width / 2;\n            return toRight ? POSITION.RIGHT : POSITION.LEFT;\n          } else if (tooltipPosition === POSITION.VERTICAL) {\n            var _origin = element.getBoundingClientRect();\n\n            var _getViewport2 = (0, _utils.getViewport)(),\n                wh = _getViewport2.height;\n\n            var toBottom = _origin.top < wh / 2 - _origin.height / 2;\n            return toBottom ? POSITION.BOTTOM : POSITION.TOP;\n          }\n\n          return tooltipPosition;\n        }\n      }, {\n        key: 'activate',\n        value: function activate(_ref2) {\n          var _this2 = this;\n\n          var top = _ref2.top,\n              left = _ref2.left,\n              position = _ref2.position;\n          if (this.timeout) clearTimeout(this.timeout);\n          this.setState({\n            visible: true,\n            position: position\n          });\n          this.timeout = setTimeout(function () {\n            _this2.setState({\n              active: true,\n              top: top,\n              left: left\n            });\n          }, this.props.tooltipDelay);\n        }\n      }, {\n        key: 'deactivate',\n        value: function deactivate() {\n          if (this.timeout) clearTimeout(this.timeout);\n\n          if (this.state.active) {\n            _events2.default.addEventListenerOnTransitionEnded(this.tooltipNode, this.onTransformEnd);\n\n            this.setState({\n              active: false\n            });\n          } else if (this.state.visible) {\n            this.setState({\n              visible: false\n            });\n          }\n        }\n      }, {\n        key: 'calculatePosition',\n        value: function calculatePosition(element) {\n          var position = this.getPosition(element);\n\n          var _element$getBoundingC = element.getBoundingClientRect(),\n              top = _element$getBoundingC.top,\n              left = _element$getBoundingC.left,\n              height = _element$getBoundingC.height,\n              width = _element$getBoundingC.width;\n\n          var xOffset = window.scrollX || window.pageXOffset;\n          var yOffset = window.scrollY || window.pageYOffset;\n\n          if (position === POSITION.BOTTOM) {\n            return {\n              top: top + height + yOffset,\n              left: left + width / 2 + xOffset,\n              position: position\n            };\n          } else if (position === POSITION.TOP) {\n            return {\n              top: top + yOffset,\n              left: left + width / 2 + xOffset,\n              position: position\n            };\n          } else if (position === POSITION.LEFT) {\n            return {\n              top: top + height / 2 + yOffset,\n              left: left + xOffset,\n              position: position\n            };\n          } else if (position === POSITION.RIGHT) {\n            return {\n              top: top + height / 2 + yOffset,\n              left: left + width + xOffset,\n              position: position\n            };\n          }\n\n          return undefined;\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _classnames,\n              _this3 = this;\n\n          var _state = this.state,\n              active = _state.active,\n              left = _state.left,\n              top = _state.top,\n              position = _state.position,\n              visible = _state.visible;\n          var positionClass = 'tooltip' + (position.charAt(0).toUpperCase() + position.slice(1));\n\n          var _props = this.props,\n              children = _props.children,\n              className = _props.className,\n              theme = _props.theme,\n              onClick = _props.onClick,\n              onMouseEnter = _props.onMouseEnter,\n              onMouseLeave = _props.onMouseLeave,\n              tooltip = _props.tooltip,\n              tooltipDelay = _props.tooltipDelay,\n              tooltipHideOnClick = _props.tooltipHideOnClick,\n              tooltipPosition = _props.tooltipPosition,\n              tooltipShowOnClick = _props.tooltipShowOnClick,\n              other = _objectWithoutProperties(_props, ['children', 'className', 'theme', 'onClick', 'onMouseEnter', 'onMouseLeave', 'tooltip', 'tooltipDelay', 'tooltipHideOnClick', 'tooltipPosition', 'tooltipShowOnClick']);\n\n          var _className = (0, _classnames3.default)(theme.tooltip, (_classnames = {}, _defineProperty(_classnames, theme.tooltipActive, active), _defineProperty(_classnames, theme[positionClass], theme[positionClass]), _classnames));\n\n          var childProps = _extends({}, other, {\n            className: className,\n            onClick: this.handleClick,\n            onMouseEnter: this.handleMouseEnter,\n            onMouseLeave: this.handleMouseLeave\n          });\n\n          var shouldPass = typeof ComposedComponent !== 'string' && defaultPassthrough;\n          var finalProps = shouldPass ? _extends({}, childProps, {\n            theme: theme\n          }) : childProps;\n          return _react2.default.createElement(ComposedComponent, finalProps, children, visible && _react2.default.createElement(_Portal2.default, null, _react2.default.createElement('span', {\n            ref: function ref(node) {\n              _this3.tooltipNode = node;\n            },\n            className: _className,\n            'data-react-toolbox': 'tooltip',\n            style: {\n              top: top,\n              left: left\n            }\n          }, _react2.default.createElement('span', {\n            className: theme.tooltipInner\n          }, tooltip))));\n        }\n      }]);\n\n      return TooltippedComponent;\n    }(_react.Component);\n\n    TooltippedComponent.propTypes = {\n      children: _propTypes2.default.node,\n      className: _propTypes2.default.string,\n      onClick: _propTypes2.default.func,\n      onMouseEnter: _propTypes2.default.func,\n      onMouseLeave: _propTypes2.default.func,\n      theme: _propTypes2.default.shape({\n        tooltip: _propTypes2.default.string,\n        tooltipActive: _propTypes2.default.string,\n        tooltipWrapper: _propTypes2.default.string\n      }),\n      tooltip: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),\n      tooltipDelay: _propTypes2.default.number,\n      tooltipHideOnClick: _propTypes2.default.bool,\n      tooltipPosition: _propTypes2.default.oneOf(Object.keys(POSITION).map(function (key) {\n        return POSITION[key];\n      })),\n      tooltipShowOnClick: _propTypes2.default.bool\n    };\n    TooltippedComponent.defaultProps = {\n      className: defaultClassName,\n      tooltipDelay: defaultDelay,\n      tooltipHideOnClick: defaultHideOnClick,\n      tooltipPosition: defaultPosition,\n      tooltipShowOnClick: defaultShowOnClick\n    };\n    return (0, _reactCssThemr.themr)(_identifiers.TOOLTIP, defaultTheme)(TooltippedComponent);\n  };\n};\n\nexports.default = tooltipFactory;","map":null,"metadata":{},"sourceType":"script"}